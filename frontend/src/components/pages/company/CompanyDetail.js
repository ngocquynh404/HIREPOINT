import React, { useState, useEffect } from 'react';
import { Link, useParams } from "react-router-dom";
import '../../../styles/companydetail.css';
import ApplyJob from '../applicant/ApplyJob';
import axios from 'axios';

const companyWall = {
    banner: 'https://example.com/600x200',
    logo: 'https://example.com/100',
    name: 'ABC Corporation',
    size: '500-1000 nh√¢n vi√™n',
    followers: '10,000'
};

const company = {
    name: 'Kohnan Vietnam',
    description: `Xin ch√†o, ch√∫ng t√¥i l√† Kohnan Japan. Kohnan ch√∫ng t√¥i l√† doanh nghi·ªáp ho·∫°t ƒë·ªông v·ªÅ lƒ©nh v·ª±c Home center v·ªõi quy m√¥ h∆°n 300 c·ª≠a h√†ng t·∫°i Nh·∫≠t B·∫£n. Home Center l√† c·ª≠a h√†ng b√†y b√°n nh·ªØng m·∫∑t h√†ng nh·∫±m m·ª•c ƒë√≠ch c·∫£i thi·ªán sinh ho·∫°t v√† ƒë·ªùi s·ªëng. T·ª´ b√≠ quy·∫øt th√†nh c√¥ng ·ªü Nh·∫≠t B·∫£n c√πng nh·ªØng s·∫£n ph·∫©m ph·ª•c v·ª• sinh ho·∫°t v√† ƒë·ªùi s·ªëng, ch√∫ng t√¥i s·∫Ω g√≥p ph·∫ßn l√† cu·ªôc s·ªëng ng∆∞·ªùi Vi·ªát Nam ng√†y c√†ng phong ph√∫ h∆°n. Ch√∫ng t√¥i ƒëang trong qu√° tr√¨nh m·ªü r·ªông quy m√¥. V√¨ th·∫ø, ch√∫ng t√¥i h√¢n h·∫°nh ch√†o ƒë√≥n t·∫•t c·∫£ c√°c ·ª©ng vi√™n ti·ªÅm nƒÉng ƒë·∫øn c·ªông t√°c c√πng ch√∫ng t√¥i ƒë·ªÉ ph√°t tri·ªÉn m·ªôt Kohnan Vi·ªát Nam l·ªõn m·∫°nh trong t∆∞∆°ng lai.`,
    address: 'Ph√≤ng 20-02, t·∫ßng 20F, cao ·ªëc B√°o Gia, 182 L√™ ƒê·∫°i H√†nh, P.15, Q.11, TP.HCM',
    mapLink: 'https://www.google.com/maps',
    jobListings: [
        { title: 'Nh√¢n Vi√™n B√°n H√†ng', location: 'H√† N·ªôi, B√¨nh D∆∞∆°ng, HCM', salary: '5 - 7 tri·ªáu', daysLeft: '24' },
        { title: 'Nh√¢n Vi√™n V·∫≠n H√†nh', location: 'HCM', salary: '6 - 8 tri·ªáu', daysLeft: '28' },
        { title: 'Nh√¢n Vi√™n Ng√¢n L∆∞u', location: 'H√† N·ªôi', salary: '5 - 7 tri·ªáu', daysLeft: '24' },
        { title: 'Nh√¢n Vi√™n Th·ªùi V·ª•', location: 'HCM, B√¨nh D∆∞∆°ng', salary: 'Th·ªèa thu·∫≠n', daysLeft: '24' }
    ]
};

export default function CompanyDetail() {
    const [company, setCompany] = useState(null);
    const [loading, setLoading] = useState(true);  // Declare loading state
    const [error, setError] = useState(null);
    const [followedCompanies, setFollowedCompanies] = useState([]);
    /*const jobData = [
        {
            id: 1,
            logo: 'logo1.png',
            title: 'Gi√°o Vi√™n VƒÉn T·ª´ 1 NƒÉm Kinh Nghi...',
            company: 'C√¥ng ty TNHH T∆∞ v·∫•n gi·∫£i ph√°p Gi√°o d·ª•c Minh Ho√†ng',
            salary: 'Tr√™n 10 tri·ªáu',
            location: 'H√† N·ªôi',
            updateTime: '2 gi·ªù',
            remainingDays: 10
        },
        {
            id: 2,
            logo: 'logo2.png',
            title: 'Chuy√™n Vi√™n ƒê√†o T·∫°o Ng√†nh F&B',
            company: 'C√¥ng ty C·ªï ph·∫ßn T·∫ßm Nh√¨n Qu·ªëc T·∫ø Aladdin',
            salary: '15 - 20 tri·ªáu',
            location: 'H√† N·ªôi',
            updateTime: '1 ng√†y',
            remainingDays: 5
        },
        {
            id: 3,
            logo: 'logo3.png',
            title: 'Tr∆∞·ªüng Ph√≤ng QA L√†m Vi·ªác T·∫°i H√† N·ªôi',
            company: 'C√¥ng ty CP X√¢y d·ª±ng K·∫øt c·∫•u th√©p IPC',
            salary: 'T·ªõi 35 tri·ªáu',
            location: 'H√† N·ªôi & 2 n∆°i kh√°c',
            updateTime: '3 ng√†y',
            remainingDays: 7
        },
        {
            id: 4,
            logo: 'logo4.png',
            title: 'Nh√¢n Vi√™n Kinh Doanh B·∫•t ƒê·ªông S·∫£n',
            company: 'C√¥ng ty B·∫•t ƒê·ªông S·∫£n ABC',
            salary: '10 - 15 tri·ªáu',
            location: 'H√† N·ªôi',
            updateTime: '5 ng√†y',
            remainingDays: 12
        },
        {
            id: 5,
            logo: 'logo5.png',
            title: 'Chuy√™n Vi√™n Marketing Online',
            company: 'C√¥ng ty TNHH Digital Marketing',
            salary: '12 - 18 tri·ªáu',
            location: 'H·ªì Ch√≠ Minh',
            updateTime: '1 tu·∫ßn',
            remainingDays: 8
        },
        {
            id: 6,
            logo: 'logo6.png',
            title: 'K·ªπ S∆∞ X√¢y D·ª±ng D√¢n D·ª•ng',
            company: 'C√¥ng ty X√¢y D·ª±ng XYZ',
            salary: '15 - 25 tri·ªáu',
            location: 'ƒê√† N·∫µng',
            updateTime: '2 tu·∫ßn',
            remainingDays: 15
        },
        {
            id: 7,
            logo: 'logo7.png',
            title: 'Nh√¢n Vi√™n H·ªó Tr·ª£ Kh√°ch H√†ng',
            company: 'C√¥ng ty TNHH D·ªãch V·ª• Kh√°ch H√†ng',
            salary: '8 - 12 tri·ªáu',
            location: 'H√† N·ªôi',
            updateTime: '3 ng√†y',
            remainingDays: 9
        },
        {
            id: 8,
            logo: 'logo8.png',
            title: 'Nh√† Ph√°t Tri·ªÉn Ph·∫ßn M·ªÅm',
            company: 'C√¥ng ty C√¥ng Ngh·ªá ABC',
            salary: '20 - 30 tri·ªáu',
            location: 'H·ªì Ch√≠ Minh',
            updateTime: '6 ng√†y',
            remainingDays: 14
        }
    ];*/

    const { id } = useParams();
    useEffect(() => {
        const fetchCompany = async () => {
            try {
                const response = await axios.get(`http://localhost:5000/api/companies/${id}`);
                setCompany(response.data);
                setLoading(false);
            } catch (error) {
                setError('Error fetching company data');
                setLoading(false);
            }
        };

        fetchCompany();
    }, [id]);
    const [favorites, setFavorites] = useState([]);

    const toggleFavorite = (jobTitle) => {
        setFavorites((prevFavorites) => {
            if (prevFavorites.includes(jobTitle)) {
                return prevFavorites.filter((title) => title !== jobTitle);
            } else {
                return [...prevFavorites, jobTitle];
            }
        });
    };

    ///apply job
    // const [jobList, setJobList] = useState(jobData); // D·ªØ li·ªáu danh s√°ch c√¥ng vi·ªác
    // const [favoriteJobs, setFavoriteJobs] = useState([]); // Danh s√°ch c√¥ng vi·ªác y√™u th√≠ch
    const [jobToApply, setJobToApply] = useState(null); // C√¥ng vi·ªác ƒë∆∞·ª£c ch·ªçn ƒë·ªÉ ·ª©ng tuy·ªÉn

    /*const handleFavoriteToggle = (jobTitle) => {
        setFavoriteJobs((prevFavorites) =>
            prevFavorites.includes(jobTitle)
                ? prevFavorites.filter((title) => title !== jobTitle)
                : [...prevFavorites, jobTitle]
        );
    };
*/
    const openApplyForm = (job) => {
        setJobToApply(job); // G√°n c√¥ng vi·ªác ƒë∆∞·ª£c ch·ªçn
    };

    const closeApplyForm = () => {
        setJobToApply(null); // ƒê√≥ng form ·ª©ng tuy·ªÉn
    };
    const handleFollow = async (companyId) => {
        try {
            const token = localStorage.getItem('token');  // L·∫•y token t·ª´ localStorage

            if (!token) {
                alert('B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.');
                return;
            }

            const response = await axios.post(
                'http://localhost:5000/api/followedcompanies',
                { company_id: companyId },
                { headers: { Authorization: `Bearer ${token}` } }
            );

            if (response.status === 201) {
                alert('C√¥ng ty ƒë√£ ƒë∆∞·ª£c theo d√µi!');
                window.location.reload();
                setFollowedCompanies((prevFollowedCompanies) => [
                    ...prevFollowedCompanies,
                    response.data.followedCompany,
                ]);
            }
        } catch (err) {
            if (err.response) {
                const { status, data } = err.response;

                if (status === 401) {
                    alert(data.message || 'B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.');
                }
                else {
                    alert(data.message || 'Kh√¥ng th·ªÉ theo d√µi c√¥ng ty. Vui l√≤ng th·ª≠ l·∫°i.');
                }
            }
        }
    };

    return (
        <div className='company-detail'>
            <div className="company-detail-info-container">
                {/* Banner c·ªßa c√¥ng ty */}
                <div className="company-detail-info-banner">
                    <img src={company?.logo} alt="Company Banner" />
                </div>

                {/* Ph·∫ßn th√¥ng tin ch√≠nh */}
                <div className="company-detail-info-content">
                    {/* Logo c√¥ng ty */}
                    <div className="company-detail-info-logo">
                        <img src={company?.logo} alt="Company Logo" />
                    </div>

                    {/* Chi ti·∫øt c√¥ng ty */}
                    <div className="company-detail-info-details">
                        <h2 className="company-detail-info-name">{company?.name}</h2>
                        <div className="company-detail-info-meta">
                            <span className="company-detail-info-size">
                                üè¢ {company?.quymo}
                            </span>
                            <span className="company-detail-info-followers">
                                üë• {company?.industry} {/*ng∆∞·ªùi theo d√µi*/}
                            </span>
                        </div>
                    </div>

                    {/* N√∫t theo d√µi c√¥ng ty */}
                    <button onClick={() => handleFollow(company._id)} className="company-detail-info-follow-button">
                        + Theo d√µi c√¥ng ty
                    </button>
                </div>
            </div>
            <div className="company-detail-info-wrapper">
                <div className="company-detail-info-main">
                    <div className="company-detail-info-intro">
                        <h2>Gi·ªõi thi·ªáu c√¥ng ty</h2>
                        <p>{company?.description}</p>
                        <button className="company-detail-info-toggle">Thu g·ªçn</button>
                    </div>

                    <div className="company-detail-info-jobs">
                        <h3 className='company-detail-info-jobs-header'>We Have Some Jobs For You</h3>
                        <div className='company-detail-info-list-left'>
                            <div className='company-detail-info-list'>
                                <div className="company-detail-info-board-list-container">
                                    {/*} {map((job, index) => (
                                        <div key={index} className="company-detail-info-item">
                                            <div className="company-detail-info-company-logo">
                                                <img src={job.logo} alt="Company Logo" />
                                            </div>
                                            <div className="company-detail-info-sections">
                                                <Link to={`/jobs/jobdetail/${job.id}`} className="company-detail-info-position-title">
                                                    <h2>{job.title}</h2>
                                                </Link>
                                                <p className="company-detail-info-company-name">{job.company}</p>
                                                <span className="company-detail-info-salary">{job.salary}</span>
                                                <div className="company-detail-info-details">
                                                    <span className="company-detail-info-location">üìç {job.location}</span>
                                                    <span className="company-detail-info-remaining-days">‚è≥ C√≤n {job.remainingDays} ng√†y ƒë·ªÉ ·ª©ng tuy·ªÉn</span>
                                                </div>
                                                <p className="company-detail-info-update">C·∫≠p nh·∫≠t {job.updateTime} tr∆∞·ªõc</p>
                                            </div>
                                            <div className="company-detail-info-apply-section">
                                                <button className="company-detail-info-apply-job-button" onClick={() => openApplyForm(job)}>·ª®ng tuy·ªÉn</button>
                                                <div className="company-detail-info-favorite-icon" onClick={() => toggleFavorite(job.title)}>
                                                    <span>{favorites.includes(job.title) ? '‚ù§Ô∏è' : 'ü§ç'}</span>
                                                </div>
                                            </div>
                                        </div>
                                    ))} */}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                {jobToApply && (
                    <ApplyJob job={jobToApply} onClose={closeApplyForm} />

                )}

                <div className="company-detail-info-sidebar">
                    <div className="company-detail-info-contact">
                        <h3>Th√¥ng tin li√™n h·ªá</h3>
                        <p>üìç ƒê·ªãa ch·ªâ c√¥ng ty</p>
                        <p>üè¢ {company?.location}</p>
                        <a href={""} target="_blank" rel="noopener noreferrer">
                            üìç Xem b·∫£n ƒë·ªì
                        </a>
                        <div className="map-container">
                            <iframe
                                src="https://www.google.com/maps/embed?pb=..."
                                width="100%"
                                height="200"
                                style={{ border: 0 }}
                                allowFullScreen=""
                                loading="lazy"
                                title="Company Location"
                            ></iframe>
                        </div>
                    </div>
                    <div className="company-detail-info-share">
                        <h3>Chia s·∫ª c√¥ng ty t·ªõi b·∫°n b√®</h3>
                        <p>Sao ch√©p ƒë∆∞·ªùng d·∫´n c√¥ng ty</p>
                        <div className="share-link">
                            <input type="text" value={company?.website} readOnly />
                            <button>üìã</button>
                        </div>
                        <p>Chia s·∫ª qua m·∫°ng x√£ h·ªôi</p>
                        <div className="company-detail-info-social-links">
                            <a href="#" className="facebook" aria-label="Facebook"></a>
                            <a href="#" className="twitter" aria-label="Twitter"></a>
                            <a href="#" className="linkedin" aria-label="LinkedIn"></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
}
